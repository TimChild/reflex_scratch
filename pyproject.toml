[tool.poetry]
name = "reflex-test"
version = "0.1.0"
description = ""
authors = ["Tim Child <timjchild@gmail.com>"]
readme = "README.md"
packages = [{ include = "reflex_test" }]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = "^3.11"
#reflex = "^0.4.8"
#reflex = { path = "../reflex"}
reflex = "^0.5.7"
google-auth = { extras = ["requests"], version = "^2.29.0" }
python-dotenv = "^1.0.1"
reflex-webcam = "^0.0.5"
pillow = "^10.3.0"
reflex-carousel = "^0.0.1"
stripe = "^9.1.0"
reflex-audio-capture = "^0.0.2"
fakeredis = "^2.23.0"
dill = "^0.3.8"
pydantic = "^2.7.1"
plotly = "^5.22.0"


[tool.poetry.group.dev.dependencies]
ruff = "^0.3.5"
pytest = "^8.2.1"
pytest-asyncio = "^0.23.7"
selenium = "^4.23.1"

[tool.ruff]
line-length = 120

[tool.ruff.format]
docstring-code-format = true

[tool.pytest.ini_options]
testpaths = ['tests']
# timeout = 300 # Global timeout for all tests (prevent indefinite hangs, but cancels all tests)
addopts = [
    "--import-mode=importlib", # Recommended by pytest (default is `prepend` for backwards compatibility)
    "-r a",                    # Show summary of (a)ll but passes
    #    "-v",  # Increase verbosity
    "--capture=no",     # Show print/log statements
    "--strict-markers", # Make sure no undefined markers are used
    #    '--runslow', # Run slow tests
]
markers = [
    "slow", # Mark slow tests
]
asyncio_mode = "auto" # Automatically detects async test functions and fixtures and treats them as marked
